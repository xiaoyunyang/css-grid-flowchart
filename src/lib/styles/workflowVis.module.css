/* autoprefixer grid: on */
@import url("https://use.fontawesome.com/releases/v5.8.0/css/all.css");
@import "./gridVariables.css";
@import "./box.css";
@import "./colors.css";
@import "./fonts.css";
@import "./global.css";

.flowchart {
  margin: 0;
  padding: 0;
  font-family: Arial,sans-serif;
  font-size: 0.875rem;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.wrapperContainer {
  z-index: 0;
  position: relative;
  margin-left: calc(var(--base-unit) * 3);
}

.wrapper {
  display: grid;
  grid-template-columns: repeat(var(--max-columns), 2fr 1fr);
  min-height: var(--workflow-wrapper-min-height);
  overflow-y: hidden;
  padding-bottom: var(--workflow-wrapper-padding-bottom);
}

/* Crossing Lines styles ---------- */
.top {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 1;
}

.bottom {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 0;
}

.foundation {
  position: relative;
  left: 0;
  top: 0;
  z-index: -1;
}

/* Crossing Lines styles ---------- */

.boxContainer {
  margin-top: var(--row-margin-top);
  outline: none;
}

.boxContainerTooltip {
  margin-bottom: calc(0 - var(--row-margin-top));
}

.boxTooltip {
  margin-left: auto;
  margin-right: auto;
}

.box {
  position: relative;
  width: var(--box-width);
  height: var(--box-height);
  padding: var(--box-padding);
  border: var(--node-border);
  border-radius: var(--box-border-radius);
  align-self: auto;
  line-height: var(--box-line-height);
}

.box .iconContainerWarning {
  right: calc(var(--base-unit) * 3.25);
  top: calc(var(--base-unit) * -1);
}
  
.diamondContainer {
  margin: calc(var(--base-unit) * 6.25) calc(var(--base-unit) * 2) 0;
  transform: rotate(45deg);
}

.diamondContainer .iconContainerWarning {
  transform: rotate(-45deg);
  right: calc(var(--base-unit) * 3.5);
  top: calc(var(--base-unit) * -6);
}

.diamond {
  width: var(--diamond-width);
  height: var(--diamond-width);
  border: var(--node-border);
  border-radius: calc(var(--border-radius) * 1.5);
  z-index: 2;
  position: relative;
}

/* TODO: Create a more general class to apply the 
margin-top and height attributes to all three connector classes
*/
.connectorContainerStandard {
  width: var(--connector-standard-width);
  height: var(--box-height);
  margin-top: var(--row-margin-top);
}

.connectorContainerDiamond {
  width: var(--diamond-container-width);
  height: var(--box-height);
  margin-top: var(--row-margin-top);
}

.connectorContainerBox {
  width: var(--box-width);
  height: var(--box-height);
  margin-top: var(--row-margin-top);
}

.connectorContainerDiamond .lineLong {
  width: calc(var(--diamond-container-width) * 1.16);
}

.hidden {
  visibility: hidden;
}

.arrowRight {
  width: 100%;
}

.lineHoriz {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
}

.lineVert {
  /* TODO: the following styles are for lineVert in diamondContainer
  height: 120%;
  margin-left: 50%;
  margin-top: -80%;
  border-left: var(--connector-border); */
  border-right: var(--connector-border);
}

.connectorContainerBox .lineVert {
  width: calc(var(--box-width) * 0.52); 
}

.connectorContainerBox .arrowUp {
  width: calc(var(--box-width) * 0.61);
}

.connectorContainerBox .arrowUp .lineVert {
  height: calc(var(--box-height) * 1.6);
  margin-top: calc(var(--row-margin-top) * -0.8);
}

.arrowUp .caret {
  margin-left: calc(var(--base-unit) * -1.3);
  margin-top: calc(var(--row-margin-top) * -0.8);
}

.connectorContainerBox .lineVert {
  height: var(--box-height);
}

.connectorContainerBox .lineVertContainer {
  position: relative;
}

.connectorContainerBox .lineVertContainer .lineVert {
  height: calc(var(--box-height) * 2);
  top: calc(var(--box-height) * -1);
  position: absolute;
}

.circle {
  position: relative;
  background-color: var(--tealish);
  height: var(--circle-diameter);
  width: var(--circle-diameter);
  border-radius: 50%;
  display: flex;
  z-index: 3;
}

.hoverable .circle:hover {
  background-color: var(--dark-sky-blue);
}

.circle:focus {
  outline: none;
}

/* TODO: The margin-bottom is different from project code  */
.circle i {
  display: block;
  margin: auto;
  color: var(--white);
  font-size: calc(var(--base-unit) * 3);
  /* margin-bottom: calc(var(--base-unit) * 3); */
  line-height: calc(var(--base-unit) * 0.125);
}

.connectorContainerStandard .circle {
  margin-top: calc(var(--box-height) * 0.35);
}

.arrowRight .caret {
  position: relative;
  margin-left: calc(var(--base-unit) * -2);
  top: calc(var(--box-height) * 0.42);
}

.flexContainer {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
}

/** 
 * TODO: every dimension in this file that's calculated from
 * base-unit should be revised to be calculated from container
 * dimensions insteasd (make visualization scalable)
 */
.line {
  align-self: auto;
  border-bottom: var(--connector-border);
  position: relative;
  height: calc(var(--box-height) * 0.529);
}

.lineLong {
  width: 100%;
}

.connectorContainerStandard .arrowRight .lineLong {
  width: calc(var(--connector-standard-width) * 0.91);
}

.connectorContainerStandard .arrowRight .lineShort {
  width: calc(var(--connector-standard-width) * 0.24);
}

.connectorContainerStandard .arrowRight .lineShortArrow {
  width: calc(var(--connector-standard-width) * 0.21);
}

.connectorContainerStandard .lineHoriz .lineShort {
  width: calc(var(--connector-standard-width) * 0.27);
}

.caret {
  display: inline-block;
  color: var(--battleship-grey);
  box-sizing: border-box;
  width: 0;
  height: 0;
  border: var(--caret-width) solid transparent;
  border-top: var(--caret-width) solid;
  border-right: var(--caret-width) solid;
}

.caretRight {
  transform: rotate(45deg);
}

.caretDown {
  transform: rotate(135deg);
}

.caretUp {
  transform: rotate(315deg);
}

.box .caret {
  color: var(--dark-grey-two);
}

.connectorContainerBox .rightUpArrow {
  height: calc(var(--box-height) * 0.7);
  width: calc(var(--box-width) * 0.6);
  top: calc(var(--base-unit) * -1.25);
  left: 0;
  position: relative;
}

.rightUpArrow .rightUp {
  width: calc(var(--box-width) * 0.52);
  height: calc(var(--box-height) * 0.7);
  top: calc(var(--base-unit) * -1.12);
  left: 0;
  position: relative;
}

.rightUp {
  border-bottom: var(--connector-border);
  border-right: var(--connector-border);
}

/* TODO: create
.connectorContainerBox .rightUp {
  width: calc(var(--box-width) * 0.5); 
}
*/

.connectorContainerBox .rightUpContainer {
  height: calc(var(--box-height) * 1.3);
  position: relative;
  top: calc(var(--box-height) * -0.9);
}

.rightUpContainer .rightUp {
  width: calc(var(--box-width) * 0.52);
  height: 110%;
}

/* TODO: Make the following style based on base-unit */
.rightUpArrow .caret {
  margin-left: calc(var(--base-unit) * -1.3);
  margin-top: calc(var(--base-unit) * -2.2);
}

.downRight {
  border-bottom: var(--connector-border);
  border-left: var(--connector-border);
}

.upRight {
  position: relative;
  border-top: var(--connector-border);
  border-left: var(--connector-border);
  height: 42%;
  width: 50%;
  margin-left: 50%;
  margin-top: 79%;
}

.downRightDash {
  width: calc(var(--diamond-container-width) * 2);
}

.downRightDash .downRight {
  border-bottom: var(--border-width) dashed var(--battleship-grey);
  border-left: var(--border-width) dashed var(--battleship-grey);
  width: calc(var(--diamond-container-width) * 1.2);
  z-index: -1;
}

.downRightDash span {
  margin-top: calc(var(--box-height) * 0.4);
  margin-left: calc(var(--base-unit) * 2.3);
  z-index: 2;
}

.connectorContainerDiamond .downRight {
  height: calc(var(--box-height) * 1.318);
  top: calc(var(--box-height) * -0.698); /* Fudge factor */
  left: calc(var(--diamond-container-width) * 0.55);
  position: relative;
  z-index: -1;
}

.hoverable {
  cursor: pointer;
  -webkit-user-select: none; /* Safari */        
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE10+/Edge */
  user-select: none; /* Standard */
}

.hoverable:focus {
  outline: none;
}

.themeDark {
  background-color: var(--battleship-grey);
  color: var(--white);
}

.themeDark i {
  color: var(--white);
}

.themeDark .active {
  color: var(--white);
}

.hoverable .themeDark:hover {
  background-color: var(--gunmetal);
  color: var(--light-grey);
}

.hoverable .themeDark.highlighted {
  background-color: var(--gunmetal);
  color: var(--light-grey);
}

.themeLight {
  background-color: var(--white);
  color: var(--charcoal-grey);
}

.themeLight .active {
  color: var(--tealish)
}

.themeLight .active {
  color: var(--tealish);
}

/* TODO: What's the style for disabled dark theme? */
.themeLight.workflowStepDisabled {
  cursor: not-allowed;
  color: var(--silver);
}

.themeLight.workflowStepDisabled i {
  color: var(--silver);
}
.themeDark.workflowStepDisabled {
  cursor: not-allowed;
  background-color: var(--cool-grey-three);
  color: var(--silver-five);
}

.themeDark.workflowStepDisabled i {
  color: var(--silver-five);
}

.hoverable .themeLight:hover {
  background-color: var(--light-grey);
  color: var(--gunmetal);
}

.hoverable .themeLight.highlighted {
  background-color: var(--light-grey);
  color: var(--gunmetal);
}

.workflowStepDisplayName {
  margin-block-start: 0;
  margin-block-end: 0;
  margin-inline-start: 0;
  margin-inline-end: 0;
  display: block;
  margin-left: auto;
  margin-right: auto;
  height: calc(var(--base-unit) * 5);
  justify-content: center;
  text-align: center;
  display: grid;
  grid-template-columns: auto auto;
  width: calc(var(--base-unit) * 25);
  white-space: nowrap;
}

.box .caret {
  margin-left: calc(var(--base-unit) * 2);
}

.box .carets {
  display: inline-block;
  position: relative;
  width: calc(var(--base-unit) * 5);
}

.box .caretsWrapper {
  display: inline-block;
  padding-right: calc(var(--base-unit) * 2);
}

.box .caret {
  margin-top: calc(var(--base-unit) * 0.25);
}

.box .caretUp {
  position: absolute;
  top: calc(var(--base-unit) * 2);
  left: 0;
}

.box .caretDown {
  position: absolute;
  top: 0;
  left: 0;
}

.iconContainer {
  width: 100%;
  display: inline-block;
  padding: var(--text-padding);
  margin-top: calc(var(--border-width) * -8);
}

.iconContainer div {
  text-align: center;
}

.iconContainerDiamond {
  display: inline-block;
  text-align: center;
  transform: rotate(45deg);
}

.iconContainerDiamond i {
  color: var(--charcoal-grey);
  font-size: calc(var(--base-unit) * 5);
  padding: calc(var(--base-unit) * 2.5);
  margin-left: calc(var(--base-unit) * 1.3);
}

.iconContainerWarning {
  position: absolute;
  font-size: var(--font-size-extra-large);
  color: var(--pale-red);
}

/* DEBUGGING CODE BEGIN */
/* Code for debugging only. Remove for production */
.flowchartContainer {
  padding-top: 100px;
  max-width: 90%;
  display: block;
  margin-left: 10%;
  margin-right: auto;
}

.flowchartContainer button {
  font-size: 18px;
  border: var(--node-border);
  margin-left: 50%;
  margin-top: 20px;
  margin-bottom: 20px;
  padding: 10px;
  width: 80px;
  cursor: pointer;
}

.toggleEdit {
  background-color: var(--white);
  color: var(--battleship-grey);
}

.toggleEditHighlight {
  background-color: var(--tealish);
  color: var(--white);
}
.workflowStepDisplayName p {
  font-size: 14px;
}

/* DEBUGGING CODE BEGIN */
/* Code for debugging only. Remove for production */
#flowchart-container {
  padding-top: 100px;
  max-width: 100%;
  display: block;
  margin-left: 5%;
  margin-right: 5%;
}
.debug .top .col1 {
  background-color: rgba(88, 88, 233, 0.5);
}
.debug .bottom .col2 {
  background-color: rgba(233, 233, 88, 0.5);
}
.debug .top .col3 {
  background-color: rgba(88, 88, 233, 0.5);
}
.debug .bottom .col4 {
  background-color: rgba(233, 233, 88, 0.5);
}
.debug .top .col5 {
  background-color: rgba(88, 88, 233, 0.5);
}
.debug .bottom .col6 {
  background-color: rgba(233, 233, 88, 0.5);
}
.debug .top .col7 {
  background-color: rgba(88, 88, 233, 0.5);
}
.debug .bottom .col8 {
  background-color: rgba(233, 233, 88, 0.5);
}
.debug .top .col9 {
  background-color: rgba(88, 88, 233, 0.5);
}
.debug .bottom .col10 {
  background-color: rgba(233, 233, 88, 0.5);
}
.debug .top .col11 {
  background-color: rgba(88, 88, 233, 0.5);
}
.debug .bottom .col12 {
  background-color: rgba(233, 233, 88, 0.5);
}
.debug .top .col13 {
  background-color: rgba(88, 88, 233, 0.5);
}
.debug .bottom .col14 {
  background-color: rgba(233, 233, 88, 0.5);
}

/* DEBUGGING CODE END */